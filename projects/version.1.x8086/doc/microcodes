

    push    <REG>
    
        # На первом опкоде записывается 16-битный регистр SP
        # А также записывается по адресу SP - 2 значение регистра
        
        1T read = 1; addr, regdata = <SP - 2>; wrdata = <REG>
           wreg = 1; num = SP; wbit = 1
           
        2T | 4T Запись данных; read = 0

-----------        

    pop     <REG>
    
        1T read = 1; addr, regdata = `SP, regdata = SP + 2
           wreg = 1; wreg_num = `SP;
           
        1T/2T wreg = 0; Чтение выровненных, не выровненных данных в regdata
        1T Запись в <REG>; read = 0; 
        
------------

    xchg ax, reg
    
        1. Прочитать значение регистра AX и <DEST> в память
        2. Записать <DEST> в AX, а AX в <DEST>

    xchg modrm
    
        1. Читать op1, op2
        2. Писать op2 в память, op1 в регистр (1Т)
        3. Либо писать op2 в регистр 1, потом в регистр 2 (2T)
        
    callf - почти что является interrupt
    
        1 читать 2 word
        2 выполнить push cs: ip:
        3 перейти к cs: ip новому
        
